# # Создать свой класс String на базе стандартного класса str.
# # В нём необходимо:
# # переопределить стандартный метод отвечающий за сложение
# # написать отсутствующий в классе str метод отвечающий за вычитание
# Принцип работы сложения в новом классе String: объект типа String можно складывать как друг с другом,
# так и с любым другим типом, который может быть приведён к строковому типу.
# "Под капотом" оба операнда приводятся к строковому типу и происходит конкатенация двух строк.
# Результатом сложения будет объект нового класса String.
class HW_string(str):
    def __add__(self, other):
        return HW_string(str(self) + str(other))

    # a=HW_string('ydod')
    # b=HW_string(['ywt',4,'678fad'])
    # print(type(a+b))
    # print(a+b)
    # Принцип работы вычитания в новом классе String: из объекта типа String можно вычесть значение любого другого типа,
    # которое может быть приведёно к строковому типу. "Под капотом" оба операнда приводятся к строковому типу и затем
    # из первого операнда убирается первое вхождение второго операнда, если таковое имеется.
    # Результатом вычитания будет объект нового класса String. Если в первом операнде
    # не находится значение второго операнда, то результатом вычитания будет первый операнд без изменений.
    def __sub__(self, other):
        self_str = str(self)
        other_str = str(other)
        if other_str in self_str:
            return HW_string(self_str.replace(other_str, ""))
        else:
            return self


a = HW_string('yddde')
b = HW_string('z')
print(type(a + b))
print(a + b)
